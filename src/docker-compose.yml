version: '3'

services:
  catalogdb:
    image: mongo
    container_name: catalogdb
    restart: always
    command: --auth --config /etc/mongo/mongod.conf
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: admin1234
      MONGO_INITDB_DATABASE: CatalogDb
      TZ: Asia/Taipei
    volumes:
      - ../docker/database/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
      - ../docker/database/mongo/configdb:/data/configdb
      - ../docker/database/mongo/data:/data/db
      - ../docker/database/mongo/mongod.conf:/etc/mongo/mongod.conf
    ports:
      - '27017:27017'
    healthcheck:
      test: ["CMD", "echo", "db.runCommand('ping').ok", "|", "mongosh", "localhost:27017/test", "--quiet"]
      
  basketdb:
    image: redis
    container_name: basketdb
    restart: always
    command: /bin/sh -c "redis-server --requirepass $${REDIS_PASSWORD}"
    environment:
      REDIS_PASSWORD: redis1234
      TZ: Asia/Taipei
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "--raw", "incr", "ping"]
      
  discountdb:
    image: postgres
    container_name: discountdb
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin1234
      POSTGRES_DB: DiscountDb
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ../docker/database/postgres/data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "sh", "-c", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
  
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@domain.org
      PGADMIN_DEFAULT_PASSWORD: admin1234
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - ../docker/pgadmin:/var/lib/pgadmin
    ports:
      - "5050:80"
    depends_on:
      discountdb:
        condition: service_healthy
  
  catalog.api:
    image: catalog.api
    container_name: catalog.api
    build:
      context: .
      dockerfile: Services/Catalog/Catalog.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      "DatabaseSettings:ConnectionString": "mongodb://user:user1234@catalogdb:27017/CatalogDb"
      TZ: Asia/Taipei
    ports:
      - "8000:80"
    depends_on:
      - catalogdb

  basket.api:
    image: basket.api
    container_name: basket.api
    build:
      context: .
      dockerfile: Services/Basket/Basket.API/Dockerfile
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      "CacheSettings:ConnectionString": "basketdb:6379, password=redis1234"
    ports:
      - "8001:80"
    depends_on:
      - basketdb